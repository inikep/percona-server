CREATE TABLE ten (f1 INTEGER NOT NULL PRIMARY KEY) ENGINE=InnoDB;
INSERT INTO ten VALUES (1),(2),(3),(4),(5),(6),(7),(8),(9),(10);
CREATE TABLE t1 (f1 INTEGER) ENGINE=InnoDB;
SET SESSION wsrep_retry_autocommit = 0;
INSERT INTO t1 (f1) SELECT 1 FROM ten AS a1, ten AS a2, ten AS a3, ten AS a4, ten AS a5, ten AS a6, ten AS a7, ten AS a8;
TRUNCATE TABLE t1;
Got one of the listed errors
SELECT COUNT(*) AS EXPECT_0 FROM t1;
EXPECT_0
0
SELECT COUNT(*) AS EXPECT_0 FROM t1;
EXPECT_0
0
DROP TABLE t1;
DROP TABLE ten;
*******************************************
Second test scenario
*******************************************
CREATE TABLE t1(i INTEGER PRIMARY KEY, c INTEGER);
SET SESSION wsrep_sync_wait=0;
SET GLOBAL wsrep_provider_options = 'dbug=d,apply_monitor_slave_enter_sync';
TRUNCATE t1;
SET SESSION wsrep_on = 0;
SET SESSION wsrep_on = 1;
SET GLOBAL wsrep_provider_options = 'dbug=';
SET SESSION wsrep_sync_wait=0;
SET SESSION wsrep_retry_autocommit = 0;
SET SESSION DEBUG_SYNC = 'wsrep_after_acl_cache_lock_guard SIGNAL wsrep_after_acl_cache_lock_guard_continue WAIT_FOR wsrep_after_acl_cache_lock_guard_reached';
INSERT INTO t1 VALUES(1,1);;
SET GLOBAL wsrep_provider_options = 'dbug=';
SET GLOBAL wsrep_provider_options = 'signal=apply_monitor_slave_enter_sync';
SET GLOBAL debug = "";
SET DEBUG_SYNC = "now SIGNAL wsrep_after_acl_cache_lock_guard_continue";
SET GLOBAL debug = NULL;
SET debug_sync = 'RESET';
ERROR 40001: Deadlock found when trying to get lock; try restarting transaction
SELECT * FROM t1;
i	c
DROP TABLE t1;
