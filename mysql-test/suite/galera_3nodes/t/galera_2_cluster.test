#
# This test creates 2x3 nodes galera cluster.
#
#       A(1) <-> B(2) <-> C(3)     {Galera cluster 1}
#       |                          {Async replication}
#       D(4) <-> E(5) <-> F(6)     {Galera cluster 2}
#

--source include/galera_cluster.inc
--source include/have_log_bin.inc

--connect node_5, 127.0.0.1, root, , test, $NODE_MYPORT_5

--connect node_4, 127.0.0.1, root, , test, $NODE_MYPORT_4
--connection node_4

--disable_query_log
--eval CHANGE REPLICATION SOURCE TO SOURCE_HOST='127.0.0.1', SOURCE_PORT=$NODE_MYPORT_1;
--enable_query_log
START REPLICA USER='root';

#
# CREATE TABLE & INSERT
#

--connection node_1

CREATE TABLE t1(c1 INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY, c2 INTEGER);
INSERT INTO t1(c2) VALUES(1);

--connect node_3, 127.0.0.1, root, , test, $NODE_MYPORT_3
--connection node_3

SELECT COUNT(*) = 1 FROM t1;

--connection node_4

--let $wait_condition = SELECT COUNT(*) = 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 't1';
--source include/wait_condition.inc

--let $wait_condition = SELECT COUNT(*) = 1 FROM t1;
--source include/wait_condition.inc

SELECT COUNT(*) = 1 FROM t1;

--connect node_6, 127.0.0.1, root, , test, $NODE_MYPORT_6
--connection node_6

SELECT COUNT(*) = 1 FROM t1;

#
# ALTER TABLE
#

--connection node_2

ALTER TABLE t1 ADD COLUMN t3 INTEGER;
--echo Node 2 column number AFTER ALTER
SELECT COUNT(*) = 3 FROM information_schema.columns WHERE table_name ='t1';

--connection node_3

--echo Node 3 column number AFTER ALTER
SELECT COUNT(*) = 3 FROM information_schema.columns WHERE table_name ='t1';

--echo Node 4 column number AFTER ALTER

--let $wait_condition = SELECT COUNT(*) = 3 FROM information_schema.columns WHERE table_name ='t1';
--source include/wait_condition.inc

SELECT COUNT(*) = 3 FROM information_schema.columns WHERE table_name ='t1';

--connection node_6

--echo Node 6 column number AFTER ALTER
SELECT COUNT(*) = 3 FROM information_schema.columns WHERE table_name ='t1';

#
# OPTIMIZE TABLE
#

--connection node_2

OPTIMIZE TABLE t1;
--let $last_gtid_executed = `SELECT @@GLOBAL.GTID_EXECUTED`

--connection node_1

--disable_query_log
--eval SELECT WAIT_FOR_EXECUTED_GTID_SET('$last_gtid_executed', 60) = 0 AS WAIT_FOR_EXECUTED_GTID_SET_EXPECTED;
--enable_query_log

--connection node_4

--disable_query_log
--eval SELECT WAIT_FOR_EXECUTED_GTID_SET('$last_gtid_executed', 60) = 0 AS WAIT_FOR_EXECUTED_GTID_SET_EXPECTED;
--enable_query_log

--connection node_6

--disable_query_log
--eval SELECT WAIT_FOR_EXECUTED_GTID_SET('$last_gtid_executed', 60) = 0 AS WAIT_FOR_EXECUTED_GTID_SET_EXPECTED;
--enable_query_log

#
# Cleanup
#

--connection node_1

DROP TABLE t1;

--connection node_4

STOP REPLICA;
RESET REPLICA ALL;
SET GLOBAL wsrep_on = OFF;
RESET MASTER;
SET GLOBAL wsrep_on = ON;

--connection node_1

SET GLOBAL wsrep_on = OFF;
RESET MASTER;
SET GLOBAL wsrep_on = ON;

--connection node_2

SET GLOBAL wsrep_on = OFF;
RESET MASTER;
SET GLOBAL wsrep_on = ON;

--connection node_3

SET GLOBAL wsrep_on = OFF;
RESET MASTER;
SET GLOBAL wsrep_on = ON;

--connection node_5

SET GLOBAL wsrep_on = OFF;
RESET MASTER;
SET GLOBAL wsrep_on = ON;

--connection node_6

SET GLOBAL wsrep_on = OFF;
RESET MASTER;
SET GLOBAL wsrep_on = ON;
