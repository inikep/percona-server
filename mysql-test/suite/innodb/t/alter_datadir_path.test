--echo #
--echo #Bug #33398681 Innodb ibd tablespace file is moved back from innodb_directories to datadir after ALTER TABLE
--echo #

#This test will check whether the ibd tablespace file is moved back or not

#Table t1a: Covers scenario create non-partitioned table without data directory specification and alter table force
#Table t1b: Covers scenario create non-partitioned table without data directory specification and alter table force algo=inplace
#Table t1c: Covers scenario create non-partitioned table without data directory specification and alter table force algo=copy
#Table t2a: Covers scenario create non-partitioned table with data directory specification and alter table force
#Table t2b: Covers scenario create non-partitioned table with data directory specification and alter table force algo=inplace
#Table t2c: Covers scenario create non-partitioned table with data directory specification and alter table force algo=copy
#Table t3a: Covers scenario create partitioned table without data directory specification and alter table force
#Table t3b: Covers scenario create partitioned table without data directory specification and alter table force algo=inplace
#Table t3c: Covers scenario create partitioned table without data directory specification and alter table force algo=copy
#Table t4a: Covers scenario create partitioned table with data directory specification and alter table force
#Table t4b: Covers scenario create partitioned table with data directory specification and alter table force algo=inplace
#Table t4c: Covers scenario create partitioned table with data directory specification and alter table force algo=copy
#Table t5a: Covers scenario create non-partitioned table with data directory specification and alter table force but moving ibd files from external dir to default dir
#Table t5b: Covers scenario create non-partitioned table with data directory specification and alter table force algo=inplace but moving ibd files from external dir to default dir
#Table t5c: Covers scenario create non-partitioned table with data directory specification and alter table force algo=copy but moving ibd files from external dir to default dir
#Table t6a: Covers scenario create partitioned table with data directory specification and alter table force but moving ibd files from external dir to default dir
#Table t6b: Covers scenario create partitioned table with data directory specification and alter table force algo=inplace but moving ibd files from external dir to default dir
#Table t6c: Covers scenario create partitioned table with data directory specification and alter table force algo=copy but moving ibd files from external dir to default dir
#Table t7a: Covers upgrade scenario where table is being created in old version without the fix for Bug33398681 and moved to new location, restarted once, upgraded to new version and triggered alter table force
#Table t7b: Covers upgrade scenario where table is being created in old version without the fix for Bug33398681 and moved to new location, restarted once, upgraded to new version and triggered alter table force algo=inplace
#Table t7c: Covers upgrade scenario where table is being created in old version without the fix for Bug33398681 and moved to new location, restarted once, upgraded to new version and triggered alter table force algo=copy;

--echo # Set different paths for --datadir
LET $MYSQLD_DATADIR = `select @@datadir`;
LET $EXTERNAL_DIR = $MYSQL_TMP_DIR/external_dir;
LET $EXTERNAL_DIR2 = $MYSQL_TMP_DIR/external_dir2;
LET $INNODB_DIRECTORIES = $MYSQLTEST_VARDIR/innodb_directories;
LET $data_directory_clause = DATA DIRECTORY='$EXTERNAL_DIR';
LET $data_directory_clause2 = DATA DIRECTORY='$EXTERNAL_DIR2';

--echo # Create innodb_directories folder
--mkdir $INNODB_DIRECTORIES
--mkdir $INNODB_DIRECTORIES/dbtest

--echo # Create external datadir folder
--mkdir $EXTERNAL_DIR
--mkdir $EXTERNAL_DIR/dbtest

--echo # Create external datadir2 folder
--mkdir $EXTERNAL_DIR2
--mkdir $EXTERNAL_DIR2/dbtest

--echo # Restart the engine to make the external directory known.
--let $external_dirs=$EXTERNAL_DIR;$EXTERNAL_DIR2
let restart_parameters = restart: --innodb-directories=$external_dirs;
--replace_result $MYSQL_TMP_DIR MYSQL_TMP_DIR
--source include/restart_mysqld.inc

--echo # Create table
CREATE DATABASE dbtest;
USE dbtest;

--echo # Normal tables
CREATE TABLE `t1a` (`c1` INT);
CREATE TABLE `t1b` (`c1` INT);
CREATE TABLE `t1c` (`c1` INT);

--echo # Normal tables with data directory clause
--replace_result $MYSQL_TMP_DIR MYSQL_TMP_DIR
eval CREATE TABLE `t2a` (`c1` INT) $data_directory_clause;
--replace_result $MYSQL_TMP_DIR MYSQL_TMP_DIR
eval CREATE TABLE `t2b` (`c1` INT) $data_directory_clause;
--replace_result $MYSQL_TMP_DIR MYSQL_TMP_DIR
eval CREATE TABLE `t2c` (`c1` INT) $data_directory_clause;

--echo # Partition tables
CREATE TABLE `t3a` (a INT, b INT) PARTITION BY RANGE(a) (PARTITION p0 VALUES LESS THAN (10), PARTITION p1 VALUES LESS THAN (20));
CREATE TABLE `t3b` (a INT, b INT) PARTITION BY RANGE(a) (PARTITION p0 VALUES LESS THAN (10), PARTITION p1 VALUES LESS THAN (20));
CREATE TABLE `t3c` (a INT, b INT) PARTITION BY RANGE(a) (PARTITION p0 VALUES LESS THAN (10), PARTITION p1 VALUES LESS THAN (20));

--echo # Partition tables with data directory clause
--replace_result $MYSQL_TMP_DIR MYSQL_TMP_DIR
eval CREATE TABLE `t4a` (a INT, b INT) PARTITION BY RANGE(a) (PARTITION p0 VALUES LESS THAN (10) $data_directory_clause, PARTITION p1 VALUES LESS THAN (20) $data_directory_clause);
--replace_result $MYSQL_TMP_DIR MYSQL_TMP_DIR
eval CREATE TABLE `t4b` (a INT, b INT) PARTITION BY RANGE(a) (PARTITION p0 VALUES LESS THAN (10) $data_directory_clause, PARTITION p1 VALUES LESS THAN (20) $data_directory_clause);
--replace_result $MYSQL_TMP_DIR MYSQL_TMP_DIR
eval CREATE TABLE `t4c` (a INT, b INT) PARTITION BY RANGE(a) (PARTITION p0 VALUES LESS THAN (10) $data_directory_clause, PARTITION p1 VALUES LESS THAN (20) $data_directory_clause);

--echo # Normal tables with data directory clause 2
--replace_result $MYSQL_TMP_DIR MYSQL_TMP_DIR
eval CREATE TABLE `t5a` (`c1` INT) $data_directory_clause2;
--replace_result $MYSQL_TMP_DIR MYSQL_TMP_DIR
eval CREATE TABLE `t5b` (`c1` INT) $data_directory_clause2;
--replace_result $MYSQL_TMP_DIR MYSQL_TMP_DIR
eval CREATE TABLE `t5c` (`c1` INT) $data_directory_clause2;

--echo # Partition tables with data directory clause
--replace_result $MYSQL_TMP_DIR MYSQL_TMP_DIR
eval CREATE TABLE `t6a` (a INT, b INT) PARTITION BY RANGE(a) (PARTITION p0 VALUES LESS THAN (10) $data_directory_clause2, PARTITION p1 VALUES LESS THAN (20) $data_directory_clause2);
--replace_result $MYSQL_TMP_DIR MYSQL_TMP_DIR
eval CREATE TABLE `t6b` (a INT, b INT) PARTITION BY RANGE(a) (PARTITION p0 VALUES LESS THAN (10) $data_directory_clause2, PARTITION p1 VALUES LESS THAN (20) $data_directory_clause2);
--replace_result $MYSQL_TMP_DIR MYSQL_TMP_DIR
eval CREATE TABLE `t6c` (a INT, b INT) PARTITION BY RANGE(a) (PARTITION p0 VALUES LESS THAN (10) $data_directory_clause2, PARTITION p1 VALUES LESS THAN (20) $data_directory_clause2);

--echo # Shutdown server
--source include/shutdown_mysqld.inc

--echo # 1. ibd files for t1a, t1b, t1c, t3a, t3b, t3c

--echo # Check that the ibd files for each table exist in the working (dbtest) folder
--list_files $MYSQLD_DATADIR/dbtest *

--echo # Move ibd files from default directory to new innodb directory
--copy_files_wildcard $MYSQLD_DATADIR/dbtest/ $INNODB_DIRECTORIES/dbtest/ *
--remove_files_wildcard $MYSQLD_DATADIR/dbtest/ *

--echo # Check that the files exist in the innodb_directories folder before alter after moving
--list_files $INNODB_DIRECTORIES/dbtest *

--echo # 2. ibd files for t2a, t2b, t2c, t4a, t4b, t4c

--echo # Check that the ibd files for each table exist in the external directory where the tables are created
--list_files $EXTERNAL_DIR/dbtest *

--echo # 3. ibd files for t5a, t5b, t5c, t6a, t6b, t6c

--echo # Check that the ibd files for each table exist in the external directory2 where the tables are created
--list_files $EXTERNAL_DIR2/dbtest *

--echo # Move ibd files for t5a, t5b, t5c, t6a, t6b, t6c from external directory2 to default directory
--copy_files_wildcard $EXTERNAL_DIR2/dbtest/ $MYSQLD_DATADIR/dbtest/ *
--remove_files_wildcard $EXTERNAL_DIR2/dbtest/ *

--echo # Check that the ibd files for t5a, t5b, t5c, t6a, t6b, t6c now exist in working (dbtest) folder
--list_files $MYSQLD_DATADIR/dbtest *

--echo # Restart the server
--let $innodb_dirs=$INNODB_DIRECTORIES;$EXTERNAL_DIR;$EXTERNAL_DIR2
let restart_parameters = restart: --innodb-directories=$innodb_dirs;
--replace_result $MYSQL_TMP_DIR MYSQL_TMP_DIR $MYSQLTEST_VARDIR MYSQLTEST_VARDIR
--source include/start_mysqld.inc

--echo # Alter table
ALTER TABLE dbtest.t1a FORCE;
ALTER TABLE dbtest.t1b FORCE, ALGORITHM=INPLACE;
ALTER TABLE dbtest.t1c FORCE, ALGORITHM=COPY;

ALTER TABLE dbtest.t2a FORCE;
ALTER TABLE dbtest.t2b FORCE, ALGORITHM=INPLACE;
ALTER TABLE dbtest.t2c FORCE, ALGORITHM=COPY;

ALTER TABLE dbtest.t3a FORCE;
ALTER TABLE dbtest.t3b FORCE, ALGORITHM=INPLACE;
ALTER TABLE dbtest.t3c FORCE, ALGORITHM=COPY;

ALTER TABLE dbtest.t4a FORCE;
ALTER TABLE dbtest.t4b FORCE, ALGORITHM=INPLACE;
ALTER TABLE dbtest.t4c FORCE, ALGORITHM=COPY;

ALTER TABLE dbtest.t5a FORCE;
ALTER TABLE dbtest.t5b FORCE, ALGORITHM=INPLACE;
ALTER TABLE dbtest.t5c FORCE, ALGORITHM=COPY;

ALTER TABLE dbtest.t6a FORCE;
ALTER TABLE dbtest.t6b FORCE, ALGORITHM=INPLACE;
ALTER TABLE dbtest.t6c FORCE, ALGORITHM=COPY;

--echo # Check that the ibd files for t1a, t1b, t1c, t3a, t3b, t3c still exist in the innodb_directories folder
--list_files $INNODB_DIRECTORIES/dbtest *

--echo # Check that the ibd files for t1a, t1b, t1c, t3a, t3b, t3c do not exist and ibd files for t5a, t5b, t5c, t6a, t6b, t6c exist in the data directory folder
--list_files $MYSQLD_DATADIR/dbtest *

--echo # Check that the ibd files for t5a, t5b, t5c, t6a, t6b, t6c do not exist in external directory2 where the tables are created
--list_files $EXTERNAL_DIR2/dbtest *

--echo # Check that the ibd files for t2a, t2b, t2c, t4a, t4b, t4c still exist in the external directory where the tables are created
--list_files $EXTERNAL_DIR/dbtest *

--echo # Shutdown server
--source include/shutdown_mysqld.inc

--echo # Now move ibd files for t1a, t1b, t1c, t3a, t3b, t3c from innodb_directories folder to default directory
--copy_files_wildcard $INNODB_DIRECTORIES/dbtest/ $MYSQLD_DATADIR/dbtest/ *
--remove_files_wildcard $INNODB_DIRECTORIES/dbtest/ *

--echo # Restart the server
--let $innodb_dirs=$INNODB_DIRECTORIES;$EXTERNAL_DIR;$EXTERNAL_DIR2
let restart_parameters = restart: --innodb-directories=$innodb_dirs;
--replace_result $MYSQL_TMP_DIR MYSQL_TMP_DIR $MYSQLTEST_VARDIR MYSQLTEST_VARDIR
--source include/start_mysqld.inc

--echo # Alter table
ALTER TABLE dbtest.t1a FORCE;
ALTER TABLE dbtest.t1b FORCE, ALGORITHM=INPLACE;
ALTER TABLE dbtest.t1c FORCE, ALGORITHM=COPY;

ALTER TABLE dbtest.t3a FORCE;
ALTER TABLE dbtest.t3b FORCE, ALGORITHM=INPLACE;
ALTER TABLE dbtest.t3c FORCE, ALGORITHM=COPY;

--echo # Check ibd files for t1a, t1b, t1c, t3a, t3b, t3c exist in default directory
--list_files $MYSQLD_DATADIR/dbtest *

--echo # Check ibd files for t1a, t1b, t1c, t3a, t3b, t3c do not exist in innodb_directories
--list_files $INNODB_DIRECTORIES/dbtest *

--echo # Clean Up

--echo # Drop tables and database
DROP TABLE dbtest.t1a;
DROP TABLE dbtest.t1b;
DROP TABLE dbtest.t1c;
DROP TABLE dbtest.t2a;
DROP TABLE dbtest.t2b;
DROP TABLE dbtest.t2c;
DROP TABLE dbtest.t3a;
DROP TABLE dbtest.t3b;
DROP TABLE dbtest.t3c;
DROP TABLE dbtest.t4a;
DROP TABLE dbtest.t4b;
DROP TABLE dbtest.t4c;
DROP TABLE dbtest.t5a;
DROP TABLE dbtest.t5b;
DROP TABLE dbtest.t5c;
DROP TABLE dbtest.t6a;
DROP TABLE dbtest.t6b;
DROP TABLE dbtest.t6c;
DROP DATABASE dbtest;

--let restart_parameters="restart: "
--source include/restart_mysqld.inc

--rmdir $INNODB_DIRECTORIES/dbtest
--rmdir $INNODB_DIRECTORIES

--rmdir $EXTERNAL_DIR/dbtest
--rmdir $EXTERNAL_DIR

--rmdir $EXTERNAL_DIR2/dbtest
--rmdir $EXTERNAL_DIR2

--echo # Shutdown server
--source include/shutdown_mysqld.inc

#Testing Upgrade scenario
--echo # Upgrade scenario
--echo # Part 1: Steps already executed in older version of mysqld i.e., 8.0.36 which does not contain the fix for Bug #33398681
--echo # 1a. Build 8.0.36 and create data_dir folder in it. Initialize mysqld in this data_dir folder. This will be the default datadir for 8.0.36
--echo # 1b. Start mysql client and create database test_upgsc and create tables t7a, t7b t7c in it
--echo # 1c. Shutdown the server and move t7a.ibd, t7b.ibd, t7c.ibd to new external directory d1 and delete database folder test_upgsc in default directory data_dir
--echo # 1d. Start and shutdown the server again to make ibd files get recognized as moved in 8.0.36
--echo # 1e. Zip this data_dir and new external dir d1 as new_innodbdir into MYSQL_TEST_DIR/std_data/data80036_with_externally_stored_tablespaces.zip
--echo # Part 2: Steps to be executed in the current version i.e., in this test
--echo # 2a. Copy the data80036_with_externally_stored_tablespaces.zip from MYSQL_TEST_DIR/std_data/ to MYSQL_TMP_DIR/test_Bug33398681/ as data8036.zip
--echo # 2b. Check that the zip file data8036.zip exists in working MYSQL_TMP_DIR/test_Bug33398681/ folder and unzip it in the same directory
--echo # 2c. Check that data_dir and new_innodbdir are existing in MYSQL_TMP_DIR/test_Bug33398681/ and list all the files
--echo # 2d. Set MYSQLD_NEW_DATADIR as MYSQL_TMP_DIR/test_Bug33398681/data_dir and EXTERNAL_DIR3 AS MYSQL_TMP_DIR/test_Bug33398681/new_innodbdir
--echo # 2e. Start the server with datadir=MYSQLD_NEW_DATADIR and innodb-directories=EXTERNAL_DIR3 options
--echo # 2f. Trigger Alter table force for t7a, t7b, t7c
--echo # 2g. Verify that the ibd files for t7a, t7b, t7c exist in EXTERNAL_DIR3

--echo # Copy the zip directory of 8.0.36 from MYSQL_TEST_DIR/std_data/ to MYSQL_TMP_DIR/test_Bug33398681 working location.
--mkdir $MYSQL_TMP_DIR/test_Bug33398681
--copy_file $MYSQL_TEST_DIR/std_data/data80036_with_externally_stored_tablespaces.zip $MYSQL_TMP_DIR/test_Bug33398681/data8036.zip

--echo # Check that the file exists in the working folder.
--file_exists $MYSQL_TMP_DIR/test_Bug33398681/data8036.zip

--echo # Unzip the zip file.
--exec unzip -qo $MYSQL_TMP_DIR/test_Bug33398681/data8036.zip -d $MYSQL_TMP_DIR/test_Bug33398681

--echo # Check that the file exists in the working folder.
--file_exists $MYSQL_TMP_DIR/test_Bug33398681/data_dir
--list_files $MYSQL_TMP_DIR/test_Bug33398681/data_dir *
--file_exists $MYSQL_TMP_DIR/test_Bug33398681/new_innodbdir
--list_files $MYSQL_TMP_DIR/test_Bug33398681/new_innodbdir *
--list_files $MYSQL_TMP_DIR/test_Bug33398681/new_innodbdir/test_upgsc *

--echo # Set different path for --datadir which points to old version 8.0.36
LET $MYSQLD_NEW_DATADIR = $MYSQL_TMP_DIR/test_Bug33398681/data_dir;

--echo # Set EXTERNAL_DIR3
--let $EXTERNAL_DIR3 = $MYSQL_TMP_DIR/test_Bug33398681/new_innodbdir/

--echo # Check that the ibd files for t7a, t7b, t7c exist in EXTERNAL_DIR3
--list_files $EXTERNAL_DIR3/test_upgsc *

--echo # Restart the server
--let restart_parameters="restart: --datadir=$MYSQLD_NEW_DATADIR --innodb-directories=$EXTERNAL_DIR3 --lower_case_table_names=1"
--replace_result $MYSQL_TMP_DIR MYSQL_TMP_DIR $MYSQL_TEST_DIR MYSQL_TEST_DIR
--source include/start_mysqld.inc

--echo # Alter table
ALTER TABLE test_upgsc.t7a FORCE;
ALTER TABLE test_upgsc.t7b FORCE, ALGORITHM=INPLACE;
ALTER TABLE test_upgsc.t7c FORCE, ALGORITHM=COPY;

--echo # Check that the ibd files for t7a, t7b, t7c still exist in EXTERNAL_DIR3
--list_files $EXTERNAL_DIR3/test_upgsc *

--echo # Clean Up

--let restart_parameters="restart: --datadir=$MYSQLD_DATADIR --innodb-directories="
--replace_result $MYSQLD_DATADIR MYSQLD_DATADIR
--source include/restart_mysqld.inc

--force-rmdir $MYSQL_TMP_DIR/test_Bug33398681

--echo # End Test
